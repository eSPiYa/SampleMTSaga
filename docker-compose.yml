services:
  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@ssw0rd
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "8888:80"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: vdolosa@gmail.com
      PGADMIN_DEFAULT_PASSWORD: P@ssw0rd
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  mtrabbitmq:
    image: masstransit/rabbitmq:latest
    ports:
     - "15672:15672"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 10s
        timeout: 5s
        retries: 10

  samplemt.service.api:
    container_name: "samplemt.service.api"
    image: ${DOCKER_REGISTRY-}samplemtservice
    build:
      context: .
      dockerfile: SampleMT.Service/Dockerfile
    depends_on:
      mtrabbitmq:
        condition: service_healthy
      #samplemt.service.worker:
      #  condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/healthz || exit 1
      interval: 10s
      timeout: 5s    
    environment:      
      Modules__0__name: "MassTransit"
      Modules__0__provider__name: "RabbitMQ"
      Modules__0__provider__host: "mtrabbitmq"
      Modules__0__provider__virtualHost: "/"
      Modules__0__provider__user: "guest"
      Modules__0__provider__password: "guest"
      Modules__0__subModules__0: "Processor"
      #Modules__0__subModules__1: "SagaStateMachine"
      #Modules__0__subModules__2: "GetForecastMessageJobConsumer"
      Modules__1: "WebApi"

  samplemt.service.statemachine:
    container_name: "samplemt.service.statemachine"
    image: ${DOCKER_REGISTRY-}samplemtservice
    build:
      context: .
      dockerfile: SampleMT.Service/Dockerfile
    depends_on:
      mtrabbitmq:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/healthz || exit 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 10
    environment:      
      Modules__0__name: "MassTransit"
      Modules__0__provider__name: "RabbitMQ"
      Modules__0__provider__host: "mtrabbitmq"
      Modules__0__provider__virtualHost: "/"
      Modules__0__provider__user: "guest"
      Modules__0__provider__password: "guest"
      Modules__0__subModules__0: "SagaStateMachine"

  samplemt.service.worker:
    container_name: "samplemt.service.worker"
    image: ${DOCKER_REGISTRY-}samplemtservice
    build:
      context: .
      dockerfile: SampleMT.Service/Dockerfile
    depends_on:
      mtrabbitmq:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/healthz || exit 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 10
    environment:      
      Modules__0__name: "MassTransit"
      Modules__0__provider__name: "RabbitMQ"
      Modules__0__provider__host: "mtrabbitmq"
      Modules__0__provider__virtualHost: "/"
      Modules__0__provider__user: "guest"
      Modules__0__provider__password: "guest"
      Modules__0__subModules__0: "GetForecastMessageJobConsumer"
      #Modules__0__subModules__1: "RequestForecastsConsumer"

volumes:
  local_pgdata:
  pgadmin-data: